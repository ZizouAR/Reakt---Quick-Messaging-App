{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/screens/RecentMessagesListScreen.tsx\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useTheme } from '@react-navigation/native';\nimport SearchBarSmall from \"../components/search/SearchBarSmall\";\nimport RecentMessagesList from \"../components/list/RecentMessagesList\";\nimport NewMessage from \"../components/buttons/NewMessage\";\nimport { useGlobal } from 'reactn';\nimport EditingDeleteButton from \"../components/buttons/EditingDeleteButton\";\nimport getLatestMessages from \"../functions/getLatestMessages\";\n\nvar MessagesListScreen = function MessagesListScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useGlobal = useGlobal('contacts'),\n      _useGlobal2 = _slicedToArray(_useGlobal, 1),\n      contacts = _useGlobal2[0];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItems = _useState6[0],\n      setSelectedItems = _useState6[1];\n\n  var _useState7 = useState(function () {\n    return getLatestMessages(contacts);\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  var theme = useTheme();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return messages.length > 0 ? React.createElement(View, {\n          style: {\n            marginLeft: 8\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 39\n          }\n        }, React.createElement(Button, {\n          title: isEditing ? \"Cancel\" : \"Edit\",\n          onPress: function onPress() {\n            return setIsEditing(isEditing ? false : true);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 71\n          }\n        })) : null;\n      },\n      headerRight: function headerRight() {\n        return isEditing ? React.createElement(EditingDeleteButton, {\n          messages: messages,\n          selectedItems: selectedItems,\n          setSelectedItems: setSelectedItems,\n          setMessages: setMessages,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 44\n          }\n        }) : React.createElement(NewMessage, {\n          messages: messages,\n          setMessages: setMessages,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 182\n          }\n        });\n      }\n    });\n  }, [navigation, isEditing, messages]);\n  return React.createElement(ScrollView, {\n    style: {\n      backgroundColor: theme.colors.card\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBarSmall, {\n    value: value,\n    setValue: setValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(RecentMessagesList, {\n    isEditing: isEditing,\n    selectedItems: selectedItems,\n    setSelectedItems: setSelectedItems,\n    messages: messages,\n    setMessages: setMessages,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MessagesListScreen;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/screens/RecentMessagesListScreen.tsx"],"names":["React","useLayoutEffect","useState","useTheme","SearchBarSmall","RecentMessagesList","NewMessage","useGlobal","EditingDeleteButton","getLatestMessages","MessagesListScreen","navigation","isEditing","setIsEditing","value","setValue","contacts","selectedItems","setSelectedItems","messages","setMessages","theme","setOptions","headerLeft","length","marginLeft","headerRight","backgroundColor","colors","card"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Button, ScrollView } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\n// Components\nimport SearchBarSmall from '../components/search/SearchBarSmall';\nimport RecentMessagesList from '../components/list/RecentMessagesList';\nimport NewMessage from '../components/buttons/NewMessage';\nimport { useGlobal } from 'reactn';\n\n// Components\nimport EditingDeleteButton from '../components/buttons/EditingDeleteButton';\n\n// Functions\nimport getLatestMessages from '../functions/getLatestMessages';\n\n// Types\nimport Message from '../types/Message';\n\nconst MessagesListScreen = ({ navigation }:any) => {\n    const [ isEditing, setIsEditing ] = useState(false);\n    const [ value, setValue ] = useState(\"\");\n    const [ contacts ] = useGlobal<any>('contacts');\n    const [ selectedItems, setSelectedItems ] = useState([]);\n    const [ messages, setMessages ] = useState<Message[]>(() => getLatestMessages(contacts)); \n    const theme:any = useTheme();\n    \n    // Allow edit button in header to change state\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerLeft: () => ( // EDIT BUTTON\n                messages.length > 0 ? <View style={{ marginLeft: 8 }}><Button title={isEditing ? \"Cancel\" : \"Edit\"} onPress={() => setIsEditing(isEditing ? false : true)}/></View> : null\n            ), // NEW MESSAGE BUTTON\n            headerRight: () => isEditing ? <EditingDeleteButton messages={messages} selectedItems={selectedItems} setSelectedItems={setSelectedItems} setMessages={setMessages} /> : <NewMessage messages={messages} setMessages={setMessages} />\n        });\n    }, [navigation, isEditing, messages]);\n\n    return (\n        <ScrollView style={{ backgroundColor: theme.colors.card }}>\n            <SearchBarSmall value={value} setValue={setValue}/>\n\n            <RecentMessagesList\n                isEditing={isEditing}\n                selectedItems={selectedItems}\n                setSelectedItems={setSelectedItems}\n                messages={messages}\n                setMessages={setMessages}\n                navigation={navigation}\n            />\n        </ScrollView>\n    )\n}\n\nexport default MessagesListScreen;"]},"metadata":{},"sourceType":"module"}