{"ast":null,"code":"export default (function (contacts) {\n  var messages = [];\n\n  for (var i = 0; i < contacts.length; i++) {\n    var lastMessage = contacts[i].messages[0];\n\n    if (lastMessage) {\n      messages.push({\n        id: contacts[i].id,\n        name: contacts[i].name,\n        phone: contacts[i].phone ? contacts[i].phone : \"\",\n        sender: lastMessage.sender,\n        receiver: lastMessage.receiver,\n        time: lastMessage.time,\n        read: lastMessage.read,\n        message: lastMessage.message\n      });\n    }\n  }\n\n  messages.sort(function (a, b) {\n    return a.time > b.time ? -1 : 1;\n  });\n  return messages;\n});","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/functions/getLatestMessages.ts"],"names":["contacts","messages","i","length","lastMessage","push","id","name","phone","sender","receiver","time","read","message","sort","a","b"],"mappings":"AAEA,gBAAe,UAACA,QAAD,EAA4B;AACvC,MAAIC,QAAkB,GAAG,EAAzB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAIE,WAAW,GAAGJ,QAAQ,CAACE,CAAD,CAAR,CAAYD,QAAZ,CAAqB,CAArB,CAAlB;;AAEA,QAAGG,WAAH,EAAe;AACXH,MAAAA,QAAQ,CAACI,IAAT,CAAc;AACVC,QAAAA,EAAE,EAAEN,QAAQ,CAACE,CAAD,CAAR,CAAYI,EADN;AAEVC,QAAAA,IAAI,EAAEP,QAAQ,CAACE,CAAD,CAAR,CAAYK,IAFR;AAGVC,QAAAA,KAAK,EAAER,QAAQ,CAACE,CAAD,CAAR,CAAYM,KAAZ,GAAoBR,QAAQ,CAACE,CAAD,CAAR,CAAYM,KAAhC,GAAwC,EAHrC;AAIVC,QAAAA,MAAM,EAAEL,WAAW,CAACK,MAJV;AAKVC,QAAAA,QAAQ,EAAEN,WAAW,CAACM,QALZ;AAMVC,QAAAA,IAAI,EAAEP,WAAW,CAACO,IANR;AAOVC,QAAAA,IAAI,EAAER,WAAW,CAACQ,IAPR;AAQVC,QAAAA,OAAO,EAAET,WAAW,CAACS;AARX,OAAd;AAUH;AACJ;;AAGDZ,EAAAA,QAAQ,CAACa,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpB,WAAQD,CAAC,CAACJ,IAAF,GAASK,CAAC,CAACL,IAAZ,GAAoB,CAAC,CAArB,GAAyB,CAAhC;AACH,GAFD;AAIA,SAAOV,QAAP;AACH,CA1BD","sourcesContent":["import Message from '../types/Message';\n\nexport default (contacts:any):Message[] => {\n    let messages:Message[] = [];\n    \n    for(let i = 0; i < contacts.length; i++){\n        let lastMessage = contacts[i].messages[0]\n\n        if(lastMessage){\n            messages.push({\n                id: contacts[i].id,\n                name: contacts[i].name,\n                phone: contacts[i].phone ? contacts[i].phone : \"\",\n                sender: lastMessage.sender,\n                receiver: lastMessage.receiver,\n                time: lastMessage.time,\n                read: lastMessage.read,\n                message: lastMessage.message\n            })\n        }\n    }\n\n    // Sorting based on age\n    messages.sort((a, b) => {\n        return (a.time > b.time) ? -1 : 1;\n    })\n\n    return messages;\n}"]},"metadata":{},"sourceType":"module"}