{"ast":null,"code":"var _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar StyleSheet = ReactNative.StyleSheet,\n    View = ReactNative.View,\n    TouchableWithoutFeedback = ReactNative.TouchableWithoutFeedback,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar PageControl = createReactClass({\n  displayName: \"PageControl\",\n  propTypes: {\n    numberOfPages: PropTypes.number.isRequired,\n    currentPage: PropTypes.number,\n    hidesForSinglePage: PropTypes.bool,\n    pageIndicatorTintColor: PropTypes.string,\n    currentPageIndicatorTintColor: PropTypes.string,\n    indicatorSize: PropTypes.object,\n    indicatorStyle: ViewPropTypes.style,\n    currentIndicatorStyle: ViewPropTypes.style,\n    onPageIndicatorPress: PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      numberOfPages: 0,\n      currentPage: 0,\n      hidesForSinglePage: false,\n      pageIndicatorTintColor: 'gray',\n      currentPageIndicatorTintColor: 'white',\n      indicatorSize: {\n        width: 8,\n        height: 8\n      },\n      indicatorStyle: {},\n      currentIndicatorStyle: {},\n      onPageIndicatorPress: function onPageIndicatorPress() {}\n    };\n  },\n  onPageIndicatorPress: function onPageIndicatorPress(idx) {\n    this.props.onPageIndicatorPress(idx);\n  },\n  render: function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        style = _this$props.style,\n        props = _objectWithoutProperties(_this$props, _excluded);\n\n    var defaultStyle = {\n      height: this.props.indicatorSize.height\n    };\n    var indicatorItemStyle = {\n      width: this.props.indicatorSize.width,\n      height: this.props.indicatorSize.height,\n      borderRadius: this.props.indicatorSize.height / 2,\n      marginLeft: 5,\n      marginRight: 5\n    };\n\n    var indicatorStyle = _objectSpread(_objectSpread(_objectSpread({}, indicatorItemStyle), this.props.indicatorStyle), {\n      backgroundColor: this.props.pageIndicatorTintColor\n    });\n\n    var currentIndicatorStyle = _objectSpread(_objectSpread(_objectSpread({}, indicatorItemStyle), this.props.currentIndicatorStyle), {\n      backgroundColor: this.props.currentPageIndicatorTintColor\n    });\n\n    var pages = [];\n\n    for (var i = 0; i < this.props.numberOfPages; i++) {\n      pages.push(i);\n    }\n\n    return this.props.hidesForSinglePage && pages.length <= 1 ? null : _reactJsxRuntime.jsx(View, {\n      style: [styles.container, defaultStyle, style],\n      children: pages.map(function (el, i) {\n        return _reactJsxRuntime.jsx(TouchableWithoutFeedback, {\n          onPress: _this.onPageIndicatorPress.bind(_this, i),\n          children: _reactJsxRuntime.jsx(View, {\n            style: i == _this.props.currentPage ? currentIndicatorStyle : indicatorStyle\n          })\n        }, i);\n      })\n    });\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n});\nmodule.exports = PageControl;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/node_modules/react-native-page-control/PageControl.js"],"names":["React","require","PropTypes","createReactClass","StyleSheet","ReactNative","View","TouchableWithoutFeedback","ViewPropTypes","PageControl","propTypes","numberOfPages","number","isRequired","currentPage","hidesForSinglePage","bool","pageIndicatorTintColor","string","currentPageIndicatorTintColor","indicatorSize","object","indicatorStyle","style","currentIndicatorStyle","onPageIndicatorPress","func","getDefaultProps","width","height","idx","props","render","defaultStyle","indicatorItemStyle","borderRadius","marginLeft","marginRight","backgroundColor","pages","i","push","length","styles","container","map","el","bind","create","alignItems","justifyContent","flexDirection","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar ReactNative = require('react-native');\nvar PropTypes = require('prop-types');\nvar createReactClass = require('create-react-class');\n\nvar { StyleSheet, View, TouchableWithoutFeedback, ViewPropTypes } = ReactNative;\n\nvar PageControl = createReactClass({\n    propTypes: {\n        numberOfPages: PropTypes.number.isRequired,\n        currentPage: PropTypes.number,\n        hidesForSinglePage: PropTypes.bool,\n        pageIndicatorTintColor: PropTypes.string,\n        currentPageIndicatorTintColor: PropTypes.string,\n        indicatorSize: PropTypes.object,\n        indicatorStyle: ViewPropTypes.style,\n        currentIndicatorStyle: ViewPropTypes.style,\n        onPageIndicatorPress: PropTypes.func\n    },\n\n    getDefaultProps: function () {\n        return {\n            numberOfPages: 0,\n            currentPage: 0,\n            hidesForSinglePage: false,\n            pageIndicatorTintColor: 'gray',\n            currentPageIndicatorTintColor: 'white',\n            indicatorSize: {width: 8, height: 8},\n            indicatorStyle: {},\n            currentIndicatorStyle: {},\n            onPageIndicatorPress: function() {}\n        };\n    },\n\n    onPageIndicatorPress: function(idx) {\n        this.props.onPageIndicatorPress(idx);\n    },\n\n    render: function () {\n        var { style, ...props } = this.props;\n\n        var defaultStyle = {\n            height: this.props.indicatorSize.height\n        };\n\n        var indicatorItemStyle = {\n            width: this.props.indicatorSize.width,\n            height: this.props.indicatorSize.height,\n            borderRadius: this.props.indicatorSize.height / 2,\n            marginLeft: 5,\n            marginRight: 5\n        };\n\n        var indicatorStyle = {\n          ...indicatorItemStyle,\n          ...this.props.indicatorStyle,\n          ...{\n            backgroundColor: this.props.pageIndicatorTintColor\n          }\n        };\n\n        var currentIndicatorStyle = {\n          ...indicatorItemStyle,\n          ...this.props.currentIndicatorStyle,\n          ...{\n            backgroundColor: this.props.currentPageIndicatorTintColor\n          }\n        };\n\n        var pages = [];\n        for (var i = 0; i < this.props.numberOfPages; i++) {\n            pages.push(i);\n        }\n\n        return (\n          this.props.hidesForSinglePage && pages.length <= 1 ? null : <View style={[styles.container, defaultStyle, style]}>\n            {pages.map((el, i) => <TouchableWithoutFeedback key={i} onPress={this.onPageIndicatorPress.bind(this, i)}>\n              <View style={i == this.props.currentPage ? currentIndicatorStyle: indicatorStyle} />\n            </TouchableWithoutFeedback>\n            )}\n          </View>\n        );\n    }\n});\n\nvar styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'transparent',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row'\n    }\n});\n\nmodule.exports = PageControl;\n"]},"metadata":{},"sourceType":"script"}