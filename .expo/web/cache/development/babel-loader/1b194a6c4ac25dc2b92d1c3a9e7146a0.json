{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Modal from \"../modal/Modal\";\nimport { useTheme } from '@react-navigation/native';\nimport GenerateNewUserAndMessageButton from \"./GenerateNewUserAndMessageButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewMessage = function NewMessage(_ref) {\n  var setMessages = _ref.setMessages,\n      messages = _ref.messages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstModalActive = _useState2[0],\n      setFirstModalActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      secondModalActive = _useState4[0],\n      setSecondModalActive = _useState4[1];\n\n  var theme = useTheme();\n  return _jsxs(TouchableOpacity, {\n    children: [_jsx(Icon, {\n      name: \"pencil-square-o\",\n      size: 24,\n      color: theme.colors.primary,\n      onPress: function onPress() {\n        return setFirstModalActive(true);\n      },\n      style: {\n        paddingRight: 16\n      }\n    }), _jsxs(Modal, {\n      title: \"New Message\",\n      visibility: firstModalActive,\n      setVisibility: setFirstModalActive,\n      children: [_jsx(GenerateNewUserAndMessageButton, {\n        setFirstModalActive: setFirstModalActive,\n        messages: messages,\n        setMessages: setMessages\n      }), _jsx(Button, {\n        title: \"Open another text\",\n        onPress: function onPress() {\n          return setSecondModalActive(true);\n        }\n      }), _jsx(Modal, {\n        title: \"Add Contact\",\n        visibility: secondModalActive,\n        setVisibility: setSecondModalActive,\n        modalLevel: 1\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  modal: {\n    backgroundColor: 'red',\n    width: \"100%\",\n    height: \"100%\"\n  },\n  modalHeader: {\n    padding: 16,\n    width: \"100%\",\n    backgroundColor: 'blue',\n    marginTop: 16,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  modalTitle: {\n    position: \"absolute\",\n    left: \"50%\",\n    transform: [{\n      translateX: -50\n    }],\n    fontSize: 20\n  }\n});\nexport default NewMessage;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/buttons/NewMessage.tsx"],"names":["React","useState","Icon","Modal","useTheme","GenerateNewUserAndMessageButton","NewMessage","setMessages","messages","firstModalActive","setFirstModalActive","secondModalActive","setSecondModalActive","theme","colors","primary","paddingRight","styles","StyleSheet","create","modal","backgroundColor","width","height","modalHeader","padding","marginTop","borderTopLeftRadius","borderTopRightRadius","flexDirection","justifyContent","alignItems","modalTitle","position","left","transform","translateX","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,IAAP;AAGA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,+BAAP;;;;AAEA,IAAMC,UAAc,GAAG,SAAjBA,UAAiB,OAAqC;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;;AACxD,kBAAkDP,QAAQ,CAAC,KAAD,CAA1D;AAAA;AAAA,MAAQQ,gBAAR;AAAA,MAA0BC,mBAA1B;;AACA,mBAAoDT,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAQU,iBAAR;AAAA,MAA2BC,oBAA3B;;AACA,MAAMC,KAAS,GAAGT,QAAQ,EAA1B;AAEA,SACI,MAAC,gBAAD;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,IAAI,EAAC,iBAAX;AAA6B,MAAA,IAAI,EAAE,EAAnC;AAAuC,MAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaC,OAA3D;AAAoE,MAAA,OAAO,EAAE;AAAA,eAAML,mBAAmB,CAAC,IAAD,CAAzB;AAAA,OAA7E;AAA8G,MAAA,KAAK,EAAE;AAAEM,QAAAA,YAAY,EAAE;AAAhB;AAArH,MADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,UAAU,EAAEP,gBAFhB;AAGI,MAAA,aAAa,EAAEC,mBAHnB;AAAA,iBAKI,KAAC,+BAAD;AAAiC,QAAA,mBAAmB,EAAEA,mBAAtD;AAA2E,QAAA,QAAQ,EAAEF,QAArF;AAA+F,QAAA,WAAW,EAAED;AAA5G,QALJ,EAMI,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAkC,QAAA,OAAO,EAAE;AAAA,iBAAMK,oBAAoB,CAAC,IAAD,CAA1B;AAAA;AAA3C,QANJ,EAQI,KAAC,KAAD;AACI,QAAA,KAAK,EAAC,aADV;AAEI,QAAA,UAAU,EAAED,iBAFhB;AAGI,QAAA,aAAa,EAAEC,oBAHnB;AAII,QAAA,UAAU,EAAE;AAJhB,QARJ;AAAA,MAFJ;AAAA,IADJ;AAsBH,CA3BD;;AAkCA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE,KADd;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAE;AAHL,GADsB;AAM7BC,EAAAA,WAAW,EAAE;AACTC,IAAAA,OAAO,EAAE,EADA;AAETH,IAAAA,KAAK,EAAE,MAFE;AAGTD,IAAAA,eAAe,EAAE,MAHR;AAITK,IAAAA,SAAS,EAAE,EAJF;AAKTC,IAAAA,mBAAmB,EAAE,EALZ;AAMTC,IAAAA,oBAAoB,EAAE,EANb;AAOTC,IAAAA,aAAa,EAAE,KAPN;AAQTC,IAAAA,cAAc,EAAE,UARP;AASTC,IAAAA,UAAU,EAAE;AATH,GANgB;AAiB7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,IAAI,EAAE,KAFE;AAGRC,IAAAA,SAAS,EAAE,CAAC;AAACC,MAAAA,UAAU,EAAE,CAAC;AAAd,KAAD,CAHH;AAIRC,IAAAA,QAAQ,EAAE;AAJF;AAjBiB,CAAlB,CAAf;AAyBA,eAAe/B,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Alert, SafeAreaView, Button, TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport ModalHeader from '../modal/ModalHeader';\nimport ModalBody from '../modal/ModalBody';\nimport Modal from '../modal/Modal';\nimport { useTheme } from '@react-navigation/native';\nimport GenerateNewUserAndMessageButton from './GenerateNewUserAndMessageButton';\n\nconst NewMessage:any = ({ setMessages, messages }:Props) => {\n    const [ firstModalActive, setFirstModalActive ] = useState(false);\n    const [ secondModalActive, setSecondModalActive ] = useState(false);\n    const theme:any = useTheme();\n\n    return (\n        <TouchableOpacity>\n            <Icon name=\"pencil-square-o\" size={24} color={theme.colors.primary} onPress={() => setFirstModalActive(true)} style={{ paddingRight: 16 }}/>\n            <Modal\n                title=\"New Message\"\n                visibility={firstModalActive}\n                setVisibility={setFirstModalActive}\n            >   \n                <GenerateNewUserAndMessageButton setFirstModalActive={setFirstModalActive} messages={messages} setMessages={setMessages} />\n                <Button title=\"Open another text\" onPress={() => setSecondModalActive(true)}/>\n\n                <Modal\n                    title=\"Add Contact\"\n                    visibility={secondModalActive}\n                    setVisibility={setSecondModalActive}\n                    modalLevel={1}\n                >\n                    \n                </Modal>\n            </Modal>\n        </TouchableOpacity>\n    )\n}\n\ninterface Props {\n    messages: any,\n    setMessages: any\n}\n\nconst styles = StyleSheet.create({\n    modal: {\n        backgroundColor: 'red',\n        width: \"100%\",\n        height: \"100%\"\n    },\n    modalHeader: {\n        padding: 16,\n        width: \"100%\",\n        backgroundColor: 'blue',\n        marginTop: 16,\n        borderTopLeftRadius: 16,\n        borderTopRightRadius: 16,\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\"\n    },\n    modalTitle: {\n        position: \"absolute\",\n        left: \"50%\",\n        transform: [{translateX: -50}],\n        fontSize: 20\n    }\n});\n\nexport default NewMessage;"]},"metadata":{},"sourceType":"module"}