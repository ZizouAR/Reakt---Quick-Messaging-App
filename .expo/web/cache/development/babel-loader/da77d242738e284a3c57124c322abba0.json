{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/components/list/recentMessages/ContactInfo.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ContactImage from \"../ContactImage\";\nimport Texts from \"./Texts\";\nimport getContact from \"../../../functions/getContact\";\nimport { useGlobal } from 'reactn';\n\nvar ContactInfo = function ContactInfo(_ref) {\n  var data = _ref.data,\n      isEditing = _ref.isEditing;\n\n  var _useGlobal = useGlobal('contacts'),\n      _useGlobal2 = _slicedToArray(_useGlobal, 1),\n      contacts = _useGlobal2[0];\n\n  var time = data.time,\n      message = data.message,\n      id = data.id;\n\n  var _getContact = getContact(data.id, contacts),\n      image = _getContact.image,\n      gender = _getContact.gender,\n      name = _getContact.name;\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.imageWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(ContactImage, {\n    image: image,\n    id: id,\n    gender: gender,\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  })), React.createElement(Texts, {\n    isEditing: isEditing,\n    time: time,\n    message: message,\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  imageWrapper: {\n    height: 80,\n    width: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default ContactInfo;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/list/recentMessages/ContactInfo.tsx"],"names":["React","ContactImage","Texts","getContact","useGlobal","ContactInfo","data","isEditing","contacts","time","message","id","image","gender","name","flexDirection","styles","imageWrapper","StyleSheet","create","height","width","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,YAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA+B;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;;AAC/C,mBAAqBH,SAAS,CAAM,UAAN,CAA9B;AAAA;AAAA,MAAQI,QAAR;;AACA,MAAMC,IAAN,GAA4BH,IAA5B,CAAMG,IAAN;AAAA,MAAYC,OAAZ,GAA4BJ,IAA5B,CAAYI,OAAZ;AAAA,MAAqBC,EAArB,GAA4BL,IAA5B,CAAqBK,EAArB;;AACA,oBAA8BR,UAAU,CAACG,IAAI,CAACK,EAAN,EAAUH,QAAV,CAAxC;AAAA,MAAMI,KAAN,eAAMA,KAAN;AAAA,MAAaC,MAAb,eAAaA,MAAb;AAAA,MAAqBC,IAArB,eAAqBA,IAArB;;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEL,KAArB;AAA4B,IAAA,EAAE,EAAED,EAAhC;AAAoC,IAAA,MAAM,EAAEE,MAA5C;AAAoD,IAAA,IAAI,EAAEC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEP,SAAlB;AAA6B,IAAA,IAAI,EAAEE,IAAnC;AAAyC,IAAA,OAAO,EAAEC,OAAlD;AAA2D,IAAA,IAAI,EAAEI,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAbD;;AAeA,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,YAAY,EAAE;AACVG,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAE,EAFG;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADe,CAAlB,CAAf;AAcA,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport ContactImage from '../ContactImage';\nimport Texts from './Texts';\nimport getContact from '../../../functions/getContact';\nimport { useGlobal } from 'reactn';\n\nconst ContactInfo = ({ data, isEditing }:Props) => {\n    const [ contacts ] = useGlobal<any>('contacts');\n    let { time, message, id } = data;\n    let { image, gender, name } = getContact(data.id, contacts);\n\n    return (\n        <View style={{ flexDirection: 'row' }}>\n            <View style={styles.imageWrapper}>\n                <ContactImage image={image} id={id} gender={gender} name={name}/>\n            </View>\n            <Texts isEditing={isEditing} time={time} message={message} name={name} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    imageWrapper: {\n        height: 80,\n        width: 60,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n});\n\ninterface Props {\n    data: any,\n    isEditing: boolean\n}\n\nexport default ContactInfo;"]},"metadata":{},"sourceType":"module"}