{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport SearchBarSmall from \"../../components/search/SearchBarSmall\";\nimport { tabBarStyle } from \"../../components/navigator/BottomNavigator\";\nimport ContactItem from \"./ContactItem\";\nimport AppStyles from \"../../config/styles\";\nimport { users } from \"./data\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CallsList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(ContactItem, {\n      item: item\n    });\n  };\n\n  var onPress = function onPress() {\n    console.log('Pressed!');\n  };\n\n  var renderSectionHeader = function renderSectionHeader(_ref3) {\n    var title = _ref3.section.title;\n    return _jsx(View, {\n      style: styles.hView,\n      children: _jsx(Text, {\n        style: styles.header,\n        children: title\n      })\n    });\n  };\n\n  var renderHeader = function renderHeader() {\n    return _jsx(TouchableRipple, {\n      onPress: onPress,\n      rippleColor: \"rgba(0, 0, 0, .32)\",\n      children: _jsxs(View, {\n        style: styles.groupView,\n        children: [_jsx(Icon, {\n          size: 28,\n          style: styles.grpIcn,\n          color: AppStyles.colors.accentColor,\n          name: \"supervisor-account\"\n        }), _jsx(Text, {\n          style: styles.grpText,\n          children: \"Start Group Call\"\n        })]\n      })\n    });\n  };\n\n  var recent = users.results.slice(31, 33);\n  var suggested = users.results.slice(1, 30);\n  var data = [{\n    title: 'Recent',\n    data: recent\n  }, {\n    title: 'Suggested',\n    data: suggested\n  }];\n\n  var onScroll = function onScroll(opacity) {\n    navigation.setOptions({\n      tabBarStyle: _objectSpread(_objectSpread({}, tabBarStyle), {}, {\n        opacity: opacity\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.searchBar,\n      children: _jsx(SearchBarSmall, {\n        value: value,\n        setValue: setValue\n      })\n    }), _jsx(SectionList, {\n      onScrollBeginDrag: function onScrollBeginDrag() {\n        return onScroll(0.3);\n      },\n      onScrollEndDrag: function onScrollEndDrag() {\n        return onScroll(1);\n      },\n      onMomentumScrollEnd: function onMomentumScrollEnd() {\n        return onScroll(1);\n      },\n      renderItem: renderItem,\n      renderSectionHeader: renderSectionHeader,\n      sections: data,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      ListHeaderComponent: renderHeader\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/ContactList/index.tsx"],"names":["React","useState","Text","TouchableRipple","Icon","SearchBarSmall","tabBarStyle","ContactItem","AppStyles","users","styles","CallsList","navigation","value","setValue","renderItem","item","onPress","console","log","renderSectionHeader","title","section","hView","header","renderHeader","groupView","grpIcn","colors","accentColor","grpText","recent","results","slice","suggested","data","onScroll","opacity","setOptions","searchBar","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { SectionList, View, ScrollView } from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport SearchBarSmall from '../../components/search/SearchBarSmall';\nimport { tabBarStyle } from \"../../components/navigator/BottomNavigator\";\n\nimport ContactItem from './ContactItem';\nimport AppStyles from '../../config/styles';\n\nimport { users } from './data';\nimport styles from './styles';\n\nexport default function CallsList({ navigation }: any) {\n\n    const [value, setValue] = useState(\"\");\n\n    const renderItem = ({ item }: any) => {\n        return <ContactItem item={item} />;\n    };\n\n    const onPress = () => {\n        console.log('Pressed!');\n    };\n\n    const renderSectionHeader = ({ section: { title } }: any) => {\n        return (\n            <View style={styles.hView}>\n                <Text style={styles.header}>{title}</Text>\n            </View>\n        );\n    };\n\n    const renderHeader = () => {\n        return (\n            <TouchableRipple\n                onPress={onPress}\n                rippleColor=\"rgba(0, 0, 0, .32)\"\n            >\n                <View style={styles.groupView}>\n                    <Icon\n                        size={28}\n                        style={styles.grpIcn}\n                        color={AppStyles.colors.accentColor}\n                        name=\"supervisor-account\"\n                    />\n\n                    <Text style={styles.grpText}>Start Group Call</Text>\n                </View>\n            </TouchableRipple>\n        );\n    };\n\n    let recent = users.results.slice(31, 33);\n    let suggested = users.results.slice(1, 30);\n\n    const data = [\n        { title: 'Recent', data: recent },\n        { title: 'Suggested', data: suggested }\n    ];\n\n\n    const onScroll = (opacity: number) => {\n        navigation.setOptions({\n            tabBarStyle: {\n                ...tabBarStyle,\n                opacity\n            }\n        })\n    }\n\n\n    return (\n        <View>\n            <View style={styles.searchBar}>\n                <SearchBarSmall value={value} setValue={setValue} />\n            </View>\n            <SectionList\n                onScrollBeginDrag={() => onScroll(0.3)} \n                onScrollEndDrag={() => onScroll(1)}\n                onMomentumScrollEnd={() => onScroll(1)}\n                renderItem={renderItem}\n                renderSectionHeader={renderSectionHeader}\n                sections={data}\n                keyExtractor={(item, index) => item + index}\n                ListHeaderComponent={renderHeader}\n            />\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}