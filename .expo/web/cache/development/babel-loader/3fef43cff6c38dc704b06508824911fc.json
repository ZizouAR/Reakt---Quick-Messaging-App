{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nimport { COLORS, FONTS, SIZES, icons, images } from \"../../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Scan = function Scan(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasPermission = _React$useState2[0],\n      setHasPermission = _React$useState2[1];\n\n  React.useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  function renderHeader() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: SIZES.padding * 4,\n        paddingHorizontal: SIZES.padding * 3\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          width: 45,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Home\");\n        },\n        children: _jsx(Image, {\n          source: icons.close,\n          style: {\n            height: 20,\n            width: 20,\n            tintColor: COLORS.white\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(Text, {\n          style: _objectSpread({\n            color: COLORS.white\n          }, FONTS.body3),\n          children: \"Scan for Clocking\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 45,\n          width: 45,\n          backgroundColor: COLORS.green,\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return console.log(\"Info\");\n        },\n        children: _jsx(Image, {\n          source: icons.info,\n          style: {\n            height: 25,\n            width: 25,\n            tintColor: COLORS.white\n          }\n        })\n      })]\n    });\n  }\n\n  function renderScanFocus() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(Image, {\n        source: images.focus,\n        resizeMode: \"stretch\",\n        style: {\n          marginTop: \"-55%\",\n          width: 200,\n          height: 300\n        }\n      })\n    });\n  }\n\n  function renderPaymentMethods() {\n    return _jsxs(View, {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: \"20%\",\n        padding: SIZES.padding * 3,\n        borderTopLeftRadius: SIZES.radius,\n        borderTopRightRadius: SIZES.radius,\n        backgroundColor: COLORS.white\n      },\n      children: [_jsx(Text, {\n        style: _objectSpread({}, FONTS.h4),\n        children: \"Other clocking methods\"\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          marginTop: SIZES.padding * 2\n        },\n        children: [_jsxs(TouchableOpacity, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          onPress: function onPress() {\n            return console.log(\"Phone Number\");\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 40,\n              height: 40,\n              backgroundColor: COLORS.lightpurple,\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 10\n            },\n            children: _jsx(Image, {\n              source: icons.phone,\n              resizeMode: \"cover\",\n              style: {\n                height: 25,\n                width: 25,\n                tintColor: COLORS.purple\n              }\n            })\n          }), _jsx(Text, {\n            style: _objectSpread({\n              marginLeft: SIZES.padding\n            }, FONTS.body4),\n            children: \"Phone Number\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginLeft: SIZES.padding * 2\n          },\n          onPress: function onPress() {\n            return console.log(\"Barcode\");\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 40,\n              height: 40,\n              backgroundColor: COLORS.lightGreen,\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 10\n            },\n            children: _jsx(Image, {\n              source: icons.barcode,\n              resizeMode: \"cover\",\n              style: {\n                height: 25,\n                width: 25,\n                tintColor: COLORS.primary\n              }\n            })\n          }), _jsx(Text, {\n            style: _objectSpread({\n              marginLeft: SIZES.padding\n            }, FONTS.body4),\n            children: \"Barcode\"\n          })]\n        })]\n      })]\n    });\n  }\n\n  function onBarCodeRead(result) {\n    console.log(result.data);\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.transparent\n    },\n    children: _jsxs(Camera, {\n      ref: function ref(_ref2) {\n        _this.camera = _ref2;\n      },\n      style: {\n        flex: 1\n      },\n      captureAudio: false,\n      type: Camera.Constants.Type.back,\n      flashMode: Camera.Constants.FlashMode.off,\n      onBarCodeScanned: onBarCodeRead,\n      androidCameraPermissionOptions: {\n        title: \"Permission to use camera\",\n        message: \"Camera is required for barcode scanning\",\n        buttonPositive: \"OK\",\n        buttonNegative: \"Cancel\"\n      },\n      children: [renderHeader(), renderScanFocus(), renderPaymentMethods()]\n    })\n  });\n};\n\nexport default Scan;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/screens/Scan.tsx"],"names":["React","Camera","COLORS","FONTS","SIZES","icons","images","Scan","navigation","useState","hasPermission","setHasPermission","useEffect","requestPermissionsAsync","status","renderHeader","flexDirection","marginTop","padding","paddingHorizontal","width","alignItems","justifyContent","navigate","close","height","tintColor","white","flex","color","body3","backgroundColor","green","borderRadius","console","log","info","renderScanFocus","focus","renderPaymentMethods","position","bottom","left","right","borderTopLeftRadius","radius","borderTopRightRadius","h4","lightpurple","phone","purple","marginLeft","body4","lightGreen","barcode","primary","onBarCodeRead","result","data","transparent","ref","camera","Constants","Type","back","FlashMode","off","title","message","buttonPositive","buttonNegative"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity\n} from \"react-native\"\nimport { Camera } from 'expo-camera'\nimport { COLORS, FONTS, SIZES, icons, images } from \"../../constants\";\n\nconst Scan = ({ navigation }: any) => { \n    const [hasPermission, setHasPermission] = React.useState(null);\n\n    React.useEffect(() => {\n        (async () => {\n          const { status } = await Camera.requestPermissionsAsync();\n          setHasPermission(status === 'granted');\n        })();\n      }, []);\n\n    if (hasPermission === null) {\n    return <View />;\n    }\n    if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n    }\n    \n    \n\n    function renderHeader() {\n        return (\n            <View style={{ flexDirection: 'row', marginTop: SIZES.padding * 4, paddingHorizontal: SIZES.padding * 3 }}>\n                <TouchableOpacity\n                    style={{\n                        width: 45,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                    onPress={() => navigation.navigate(\"Home\")}\n                >\n                    <Image\n                        source={icons.close}\n                        style={{\n                            height: 20,\n                            width: 20,\n                            tintColor: COLORS.white\n                        }}\n                    />\n                </TouchableOpacity>\n\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n                    <Text style={{ color: COLORS.white, ...FONTS.body3 }}>Scan for Clocking</Text>\n                </View>\n\n                <TouchableOpacity\n                    style={{\n                        height: 45,\n                        width: 45,\n                        backgroundColor: COLORS.green,\n                        borderRadius: 10,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                    onPress={() => console.log(\"Info\")}\n                >\n                    <Image\n                        source={icons.info}\n                        style={{\n                            height: 25,\n                            width: 25,\n                            tintColor: COLORS.white\n                        }}\n                    />\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    function renderScanFocus() {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                <Image\n                    source={images.focus}\n                    resizeMode=\"stretch\"\n                    style={{\n                        marginTop: \"-55%\",\n                        width: 200,\n                        height: 300\n                    }}\n                />\n            </View>\n        )\n    }\n\n    function renderPaymentMethods() {\n        return (\n            <View\n                style={{\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    height: \"20%\",\n                    padding: SIZES.padding * 3,\n                    borderTopLeftRadius: SIZES.radius,\n                    borderTopRightRadius: SIZES.radius,\n                    backgroundColor: COLORS.white\n                }}\n            >\n                <Text style={{ ...FONTS.h4 }}>Other clocking methods</Text>\n\n                <View\n                    style={{\n                        flex: 1,\n                        flexDirection: 'row',\n                        alignItems: 'flex-start',\n                        marginTop: SIZES.padding * 2\n                    }}\n                >\n                    <TouchableOpacity\n                        style={{\n                            flexDirection: 'row',\n                            alignItems: 'center'\n                        }}\n                        onPress={() => console.log(\"Phone Number\")}\n                    >\n                        <View\n                            style={{\n                                width: 40,\n                                height: 40,\n                                backgroundColor: COLORS.lightpurple,\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                borderRadius: 10\n                            }}\n                        >\n                            <Image\n                                source={icons.phone}\n                                resizeMode=\"cover\"\n                                style={{\n                                    height: 25,\n                                    width: 25,\n                                    tintColor: COLORS.purple\n                                }}\n                            />\n                        </View>\n                        <Text style={{ marginLeft: SIZES.padding, ...FONTS.body4 }}>Phone Number</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            marginLeft: SIZES.padding * 2\n                        }}\n                        onPress={() => console.log(\"Barcode\")}\n                    >\n                        <View\n                            style={{\n                                width: 40,\n                                height: 40,\n                                backgroundColor: COLORS.lightGreen,\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                borderRadius: 10\n                            }}\n                        >\n                            <Image\n                                source={icons.barcode}\n                                resizeMode=\"cover\"\n                                style={{\n                                    height: 25,\n                                    width: 25,\n                                    tintColor: COLORS.primary\n                                }}\n                            />\n                        </View>\n                        <Text style={{ marginLeft: SIZES.padding, ...FONTS.body4 }}>Barcode</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n\n    function onBarCodeRead(result: any) {\n        console.log(result.data)\n    }\n\n    return (\n        <View style={{ flex: 1, backgroundColor: COLORS.transparent }}>\n            <Camera\n                ref={ref => {\n                    this.camera = ref\n                }}\n                style={{ flex: 1 }}\n                captureAudio={false}\n                type={Camera.Constants.Type.back}\n                flashMode={Camera.Constants.FlashMode.off}\n                onBarCodeScanned={onBarCodeRead}\n                androidCameraPermissionOptions={{\n                    title: \"Permission to use camera\",\n                    message: \"Camera is required for barcode scanning\",\n                    buttonPositive: \"OK\",\n                    buttonNegative: \"Cancel\"\n                }}\n            >\n                {renderHeader()}\n                {renderScanFocus()}\n                {renderPaymentMethods()}\n            </Camera>\n        </View>\n    )\n}\n\nexport default Scan;"]},"metadata":{},"sourceType":"module"}