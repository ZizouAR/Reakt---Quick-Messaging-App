{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/screens/MessageScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useTheme } from '@react-navigation/native';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport GoBackTotalMessages from \"../components/buttons/GoBackTotalMessages\";\nimport HeaderImage from \"../components/image/HeaderImage\";\nimport SendingMessage from \"../components/list/messages/SendingMessage\";\nimport ReceivingMessage from \"../components/list/messages/ReceivingMessage\";\nimport Modal from \"../components/modal/Modal\";\nimport ProfileImage from \"../components/image/ProfileImage\";\nimport ActionButton from \"../components/buttons/ActionButton\";\nimport { useGlobal } from 'reactn';\nvar playButtons = [{\n  id: \"Photos\",\n  color: \"#FFF\",\n  src: require(\"../../assets/apple-photos.png\")\n}, {\n  id: \"App Store\",\n  color: \"#01a5eb\",\n  src: require(\"../../assets/app-store.png\")\n}, {\n  id: \"Apple Health\",\n  color: \"#000\",\n  src: require(\"../../assets/health-rings.png\")\n}, {\n  id: \"Stickers\",\n  color: \"#FFF\",\n  src: require(\"../../assets/stickers.png\")\n}, {\n  id: \"Memoji\",\n  color: \"#333\",\n  src: require(\"../../assets/memoji.png\")\n}, {\n  id: \"Wikipedia\",\n  color: \"#FFF\",\n  src: require(\"../../assets/wikipedia.png\")\n}, {\n  id: \"Pinterest\",\n  color: \"#FFF\",\n  src: require(\"../../assets/pinterest.png\")\n}, {\n  id: \"Trello\",\n  color: \"#0089d9\",\n  src: require(\"../../assets/trello.png\")\n}];\n\nvar PlayButton = function PlayButton(_ref) {\n  var color = _ref.color,\n      src = _ref.src;\n  return React.createElement(View, {\n    style: {\n      height: 40,\n      width: 60,\n      borderRadius: 80,\n      backgroundColor: color,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginRight: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: src,\n    style: {\n      height: 30,\n      width: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MessageScreen = function MessageScreen(_ref2) {\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n\n  var _useState = useState(route.params.contact),\n      _useState2 = _slicedToArray(_useState, 2),\n      contact = _useState2[0],\n      setContacat = _useState2[1];\n\n  var totalMessages = route.params.totalMessages;\n  var messages = contact.messages;\n  var scrollViewRef = useRef();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalOpen = _useState4[0],\n      setModalOpen = _useState4[1];\n\n  var theme = useTheme();\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      kbOpen = _useState8[0],\n      setKbOpen = _useState8[1];\n\n  var _useGlobal = useGlobal('contacts'),\n      _useGlobal2 = _slicedToArray(_useGlobal, 1),\n      contacts = _useGlobal2[0];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: contact.name,\n      headerLeft: function headerLeft() {\n        return React.createElement(GoBackTotalMessages, {\n          total: totalMessages,\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return React.createElement(HeaderImage, {\n          id: contact.id,\n          gender: contact.gender,\n          name: contact.name,\n          image: contact.image,\n          modalOpen: modalOpen,\n          setModalOpen: setModalOpen,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    Keyboard.addListener('keyboardWillShow', function () {\n      return setKbOpen(true);\n    });\n    Keyboard.addListener('keyboardWillHide', function () {\n      return setKbOpen(false);\n    });\n    return function () {\n      Keyboard.removeListener('keyboardWillShow', function () {\n        return setKbOpen(true);\n      });\n      Keyboard.removeListener('keyboardWillHide', function () {\n        return setKbOpen(false);\n      });\n      setKbOpen(false);\n    };\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    var localMessages = contact.messages;\n    var newMessage = {\n      time: +new Date(),\n      id: contact.id,\n      sender: 0,\n      receiver: contact.id,\n      message: value,\n      name: contact.name,\n      read: true\n    };\n    var newMessages = [].concat(_toConsumableArray(localMessages), [newMessage]);\n    newMessages.sort(function (a, b) {\n      return a.time > b.time ? -1 : 1;\n    });\n\n    var newContact = _objectSpread(_objectSpread({}, contact), {}, {\n      messages: newMessages\n    });\n\n    setContacat(newContact);\n    var newContacts = contacts;\n\n    for (var i = 0; i < newContacts.length; i++) {\n      newContacts = newContacts.filter(function (item) {\n        return item.id !== contact.id;\n      });\n    }\n\n    newContacts.sort(function (a, b) {\n      return a.id > b.id ? 1 : -1;\n    });\n    setValue(\"\");\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: [styles.wrapper, {\n      backgroundColor: theme.colors.card\n    }],\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 60,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.messageBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    ref: scrollViewRef,\n    onContentSizeChange: function onContentSizeChange() {\n      return scrollViewRef.current.scrollToEnd({\n        animated: true\n      });\n    },\n    style: {\n      backgroundColor: theme.colors.card\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, messages.slice(0).reverse().map(function (data, index) {\n    if (data.sender == 0) {\n      return React.createElement(SendingMessage, {\n        key: index,\n        message: data.message,\n        time: data.time,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 37\n        }\n      });\n    } else {\n      return React.createElement(ReceivingMessage, {\n        key: index,\n        message: data.message,\n        time: data.time,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      });\n    }\n  }))), React.createElement(View, {\n    style: [styles.inputWrapper, {\n      backgroundColor: theme.colors.card\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Type something...\",\n    value: value,\n    onChangeText: function onChangeText(value) {\n      return setValue(value);\n    },\n    style: [styles.input, {\n      backgroundColor: theme.colors.background,\n      color: theme.colors.text\n    }],\n    autoCapitalize: \"sentences\",\n    autoFocus: true,\n    numberOfLines: 1,\n    onSubmitEditing: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  })), !kbOpen ? React.createElement(FlatList, {\n    style: [styles.playWrapper, {\n      backgroundColor: theme.colors.border\n    }],\n    horizontal: true,\n    data: playButtons,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(PlayButton, {\n        key: item.key,\n        color: item.color,\n        src: item.src,\n        kbOpen: kbOpen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 67\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 31\n    }\n  }) : null), React.createElement(Modal, {\n    title: \"\",\n    visibility: modalOpen,\n    setVisibility: setModalOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, React.createElement(ProfileImage, {\n    id: contact.id,\n    image: contact.image,\n    gender: contact.gender,\n    name: contact.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 2,\n    style: {\n      fontSize: 32,\n      maxWidth: \"75%\",\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, contact.name), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, React.createElement(ActionButton, {\n    iconName: \"phone\",\n    disabled: !contact.phone ? true : false,\n    onPress: function onPress() {\n      return Alert.alert(\"Could not call \" + contact.phone + \".\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }), React.createElement(ActionButton, {\n    iconName: \"video-camera\",\n    disabled: true,\n    onPress: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }), React.createElement(ActionButton, {\n    iconName: \"envelope\",\n    disabled: !contact.email ? true : false,\n    onPress: function onPress() {\n      return Alert.alert(\"Could not send an email to \" + contact.email + \".\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }), React.createElement(ActionButton, {\n    iconName: \"globe\",\n    disabled: false,\n    onPress: function onPress() {\n      return Linking.canOpenURL(\"https://marcusfredriksson.com\").then(function (supported) {\n        return supported ? Linking.openURL(\"https://marcusfredriksson.com\") : null;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    flex: 1\n  },\n  messageBox: {\n    paddingTop: 16,\n    paddingLeft: 8,\n    paddingRight: 8,\n    flex: 4\n  },\n  inputWrapper: {\n    flex: 1.5\n  },\n  inputWrapperInner: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    padding: 16\n  },\n  input: {\n    backgroundColor: 'green',\n    padding: 16,\n    borderRadius: 8\n  },\n  playWrapper: {\n    backgroundColor: 'red',\n    padding: 16\n  }\n});\nexport default MessageScreen;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/screens/MessageScreen.tsx"],"names":["useTheme","React","useEffect","useLayoutEffect","useRef","useState","GoBackTotalMessages","HeaderImage","SendingMessage","ReceivingMessage","Modal","ProfileImage","ActionButton","useGlobal","playButtons","id","color","src","require","PlayButton","height","width","borderRadius","backgroundColor","justifyContent","alignItems","marginRight","MessageScreen","navigation","route","params","contact","setContacat","totalMessages","messages","scrollViewRef","modalOpen","setModalOpen","theme","value","setValue","kbOpen","setKbOpen","contacts","setOptions","title","name","headerLeft","headerTitle","gender","image","Keyboard","addListener","removeListener","handleSubmit","localMessages","newMessage","time","Date","sender","receiver","message","read","newMessages","sort","a","b","newContact","newContacts","i","length","filter","item","styles","wrapper","colors","card","Platform","OS","messageBox","current","scrollToEnd","animated","slice","reverse","map","data","index","inputWrapper","padding","input","background","text","playWrapper","border","key","fontSize","maxWidth","marginTop","flexDirection","phone","Alert","alert","email","Linking","canOpenURL","then","supported","openURL","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","inputWrapperInner"],"mappings":"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","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Linking, Alert, Dimensions, TextInput, Keyboard, KeyboardAvoidingView, Platform, SafeAreaView, FlatList, Image } from 'react-native';\nimport GoBackTotalMessages from '../components/buttons/GoBackTotalMessages';\nimport HeaderImage from '../components/image/HeaderImage';\nimport Contact from '../types/Contact';\nimport SendingMessage from '../components/list/messages/SendingMessage';\nimport ReceivingMessage from '../components/list/messages/ReceivingMessage';\nimport Modal from '../components/modal/Modal';\nimport ProfileImage from '../components/image/ProfileImage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport ActionButton from '../components/buttons/ActionButton';\nimport { color } from 'react-native-reanimated';\nimport { setGlobal, useGlobal } from 'reactn';\nimport getContact from '../functions/getContact';\nimport Message from '../types/Message';\n\nconst playButtons = [\n    {\n        id: \"Photos\",\n        color: \"#FFF\",\n        src: require(\"../../assets/apple-photos.png\")\n    },\n    {\n        id: \"App Store\",\n        color: \"#01a5eb\",\n        src: require(\"../../assets/app-store.png\")\n    },\n    {\n        id: \"Apple Health\",\n        color: \"#000\",\n        src: require(\"../../assets/health-rings.png\")\n    },\n    {\n        id: \"Stickers\",\n        color: \"#FFF\",\n        src: require(\"../../assets/stickers.png\")\n    },\n    {\n        id: \"Memoji\",\n        color: \"#333\",\n        src: require(\"../../assets/memoji.png\")\n    },\n    {\n        id: \"Wikipedia\",\n        color: \"#FFF\",\n        src: require(\"../../assets/wikipedia.png\")\n    },\n    {\n        id: \"Pinterest\",\n        color: \"#FFF\",\n        src: require(\"../../assets/pinterest.png\")\n    },\n    {\n        id: \"Trello\",\n        color: \"#0089d9\",\n        src: require(\"../../assets/trello.png\")\n    },\n]\n\nconst PlayButton = ({ color, src }:any) => {\n    return (\n        <View\n            style={{\n                height: 40,\n                width: 60,\n                borderRadius: 80,\n                backgroundColor: color,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginRight: 16\n            }}\n        >\n            <Image source={src} style={{ height: 30, width: 30 }} />\n        </View>\n    )\n}\n\nconst MessageScreen = ({ navigation, route }:Props) => {\n    const [ contact, setContacat] = useState(route.params.contact);\n    const totalMessages = route.params.totalMessages;\n    const messages = contact.messages\n    const scrollViewRef = useRef();\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const theme = useTheme();\n    const [ value, setValue ] = useState(\"\");\n    const [ kbOpen, setKbOpen ] = useState(false);\n    const [ contacts ] = useGlobal<any>('contacts');\n     \n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: contact.name,\n            headerLeft: () => <GoBackTotalMessages total={totalMessages} navigation={navigation} />,\n            headerTitle: () => <HeaderImage\n                                    id={contact.id}\n                                    gender={contact.gender}\n                                    name={contact.name}\n                                    image={contact.image}\n                                    modalOpen={modalOpen}\n                                    setModalOpen={setModalOpen}\n                                />\n        });\n    }, []);\n\n    useEffect(() => {\n        Keyboard.addListener('keyboardWillShow', () => setKbOpen(true));\n        Keyboard.addListener('keyboardWillHide', () => setKbOpen(false));\n        \n        return (() => {\n            Keyboard.removeListener('keyboardWillShow', () => setKbOpen(true));\n            Keyboard.removeListener('keyboardWillHide', () => setKbOpen(false));\n            setKbOpen(false);\n        });\n    }, [])\n\n    const handleSubmit = () => {\n        const localMessages = contact.messages\n\n        const newMessage:Message = {\n            time: +new Date(),\n            id: contact.id,\n            sender: 0,\n            receiver: contact.id,\n            message: value,\n            name: contact.name,\n            read: true\n        }\n\n        let newMessages = [...localMessages, newMessage]\n\n        newMessages.sort((a, b) => {\n            return (a.time > b.time) ? -1 : 1;\n        })\n\n        const newContact = {...contact, messages: newMessages}\n        setContacat(newContact)\n        \n        let newContacts = contacts\n        for(let i = 0; i < newContacts.length; i++){\n            newContacts = newContacts.filter((item:any) => item.id !== contact.id);\n        }\n\n        newContacts.sort((a:any, b:any) => {\n            return (a.id > b.id) ? 1 : -1;\n        })\n    \n\n        setValue(\"\");\n    }\n\n    return (\n        <KeyboardAvoidingView\n            style={[styles.wrapper, { backgroundColor: theme.colors.card }]}\n            behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n            keyboardVerticalOffset={60}\n        >\n            <View style={styles.messageBox}>\n                <ScrollView\n                    ref={scrollViewRef}\n                    onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}\n                    style={{ backgroundColor: theme.colors.card }}\n                    >\n                    {\n                        messages.slice(0).reverse().map((data:any, index:number) => {\n                            if(data.sender == 0){\n                                return (\n                                    <SendingMessage key={index} message={data.message} time={data.time}/>\n                                    )\n                                } else {\n                                    return (\n                                        <ReceivingMessage key={index} message={data.message} time={data.time}/>\n                                        )\n                                    }\n                                })\n                            }\n                </ScrollView>\n            </View>\n\n            <View style={[styles.inputWrapper, { backgroundColor: theme.colors.card }]}>\n                <View style={{ padding: 16 }}>\n                    <TextInput\n                        placeholder=\"Type something...\"\n                        value={value}\n                        onChangeText={(value:string) => setValue(value)}\n                        style={[styles.input, { backgroundColor: theme.colors.background, color: theme.colors.text }]}\n                        autoCapitalize={\"sentences\"}\n                        autoFocus={true}\n                        numberOfLines={1}\n                        onSubmitEditing={handleSubmit}\n                    />\n                </View>\n                {\n                    !kbOpen ? <FlatList \n                                    style={[styles.playWrapper, { backgroundColor: theme.colors.border }]}\n                                    horizontal={true}\n                                    data={playButtons}\n                                    renderItem={({ item }:any) => <PlayButton key={item.key} color={item.color} src={item.src} kbOpen={kbOpen} />}\n                                /> : null\n                }\n            </View>\n\n            <Modal title=\"\" visibility={modalOpen} setVisibility={setModalOpen}>\n\n                <ProfileImage id={contact.id} image={contact.image} gender={contact.gender} name={contact.name}/>\n\n                <Text numberOfLines={2} style={{ fontSize: 32, maxWidth: \"75%\", marginTop: 8 }}>{contact.name}</Text>\n\n                <View style={{ flexDirection: \"row\", marginTop: 16 }}>\n                    <ActionButton iconName=\"phone\" disabled={!contact.phone ? true : false} onPress={() => Alert.alert(`Could not call ${contact.phone}.`)}/>\n                    <ActionButton iconName=\"video-camera\" disabled={true} onPress={null}/>\n                    <ActionButton iconName=\"envelope\" disabled={!contact.email ? true : false} onPress={() => Alert.alert(`Could not send an email to ${contact.email}.`)}/>\n                    <ActionButton iconName=\"globe\" disabled={false} onPress={() => Linking.canOpenURL(\"https://marcusfredriksson.com\").then(supported => supported ? Linking.openURL(\"https://marcusfredriksson.com\") : null)}/>\n                </View>\n            </Modal>\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        flex: 1\n    },\n    messageBox: {\n        paddingTop: 16,\n        paddingLeft: 8,\n        paddingRight: 8,\n        flex: 4\n    },\n    inputWrapper: {\n        flex: 1.5\n    },\n    inputWrapperInner: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        padding: 16\n    },\n    input: {\n        backgroundColor: 'green',\n        padding: 16,\n        borderRadius: 8,\n    },\n    playWrapper: {\n        backgroundColor: 'red',\n        padding: 16\n    }\n});\n\ninterface Props {\n    navigation: any,\n    route: any,\n    contact: Contact\n}\n\nexport default MessageScreen;"]},"metadata":{},"sourceType":"module"}