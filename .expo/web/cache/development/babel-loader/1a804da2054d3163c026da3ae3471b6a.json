{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/components/list/RecentMessagesList.tsx\";\n\nimport React, { useEffect } from 'react';\nimport { useTheme } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RecentMessagesListItem from \"./RecentMessagesListItem\";\n\nvar RecentMessagesList = function RecentMessagesList(_ref) {\n  var isEditing = _ref.isEditing,\n      selectedItems = _ref.selectedItems,\n      setSelectedItems = _ref.setSelectedItems,\n      messages = _ref.messages,\n      setMessages = _ref.setMessages,\n      navigation = _ref.navigation;\n  var theme = useTheme();\n  useEffect(function () {\n    !isEditing ? setSelectedItems([]) : null;\n  }, [isEditing]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, messages.map(function (data, index) {\n    return React.createElement(RecentMessagesListItem, {\n      key: data.id,\n      isEditing: isEditing,\n      selectedItems: selectedItems,\n      data: data,\n      messages: messages,\n      setMessages: setMessages,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    });\n  }), React.createElement(Text, {\n    style: {\n      padding: 16,\n      textAlign: \"center\",\n      fontSize: 16,\n      color: theme.colors.text2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, messages.length === 1 ? messages.length + \" message\" : messages.length + \" messages\"));\n};\n\nexport default RecentMessagesList;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/list/RecentMessagesList.tsx"],"names":["React","useEffect","useTheme","RecentMessagesListItem","RecentMessagesList","isEditing","selectedItems","setSelectedItems","messages","setMessages","navigation","theme","map","data","index","id","padding","textAlign","fontSize","color","colors","text2","length"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAIA,OAAOC,sBAAP;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAA6F;AAAA,MAA1FC,SAA0F,QAA1FA,SAA0F;AAAA,MAA/EC,aAA+E,QAA/EA,aAA+E;AAAA,MAAhEC,gBAAgE,QAAhEA,gBAAgE;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AACpH,MAAMC,KAAS,GAAGT,QAAQ,EAA1B;AAGAD,EAAAA,SAAS,CAAC,YAAM;AACZ,KAACI,SAAD,GAAaE,gBAAgB,CAAC,EAAD,CAA7B,GAAoC,IAApC;AACH,GAFQ,EAEN,CAACF,SAAD,CAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQG,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAWC,KAAX,EAAyB;AAClC,WACI,oBAAC,sBAAD;AACI,MAAA,GAAG,EAAED,IAAI,CAACE,EADd;AAEI,MAAA,SAAS,EAAEV,SAFf;AAGI,MAAA,aAAa,EAAEC,aAHnB;AAII,MAAA,IAAI,EAAEO,IAJV;AAKI,MAAA,QAAQ,EAAEL,QALd;AAMI,MAAA,WAAW,EAAEC,WANjB;AAOI,MAAA,UAAU,EAAEC,UAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZD,CAFR,EAiBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,QAA1B;AAAoCC,MAAAA,QAAQ,EAAE,EAA9C;AAAkDC,MAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC;AAAtE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Fb,QAAQ,CAACc,MAAT,KAAoB,CAApB,GAA2Bd,QAAQ,CAACc,MAApC,gBAA0Dd,QAAQ,CAACc,MAAnE,cAA7F,CAjBJ,CADJ;AAqBH,CA7BD;;AAwCA,eAAelB,kBAAf","sourcesContent":["// Modules\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from '@react-navigation/native';\nimport { View, Text, Alert, Button } from 'react-native';\n\n// Data\nimport RecentMessagesListItem from './RecentMessagesListItem';\n\n// Types\nimport EditingDeleteButton from '../buttons/EditingDeleteButton';\n\nconst RecentMessagesList = ({ isEditing, selectedItems, setSelectedItems, messages, setMessages, navigation }:Props) => {\n    const theme:any = useTheme();\n\n    // Reset selectedItems if edit is closed\n    useEffect(() => {\n        !isEditing ? setSelectedItems([]) : null;\n    }, [isEditing]);\n    \n    return (\n        <View>\n            {\n                messages.map((data:any, index:any) => {\n                    return (\n                        <RecentMessagesListItem\n                            key={data.id}\n                            isEditing={isEditing}\n                            selectedItems={selectedItems}\n                            data={data}\n                            messages={messages}\n                            setMessages={setMessages}\n                            navigation={navigation}\n                        />\n                    )\n                })\n            }\n\n            <Text style={{ padding: 16, textAlign: \"center\", fontSize: 16, color: theme.colors.text2 }}>{messages.length === 1 ? `${messages.length} message` : `${messages.length} messages`}</Text>\n        </View>\n    )\n}\n\ninterface Props {\n    isEditing: boolean,\n    selectedItems: any,\n    setSelectedItems: any,\n    messages: any,\n    setMessages: any,\n    navigation: any\n}\n\nexport default RecentMessagesList;"]},"metadata":{},"sourceType":"module"}