{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nginx-iwnl/messages/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { AppearanceProvider, useColorScheme } from 'react-native-appearance';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport { useGlobal, setGlobal } from 'reactn';\nimport RecentMessagesListScreen from \"./src/screens/RecentMessagesListScreen\";\nimport MessageScreen from \"./src/screens/MessageScreen\";\nimport defaultContacts from \"./src/data/contacts.json\";\nexport default function App() {\n  var scheme = useColorScheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useGlobal = useGlobal('contacts'),\n      _useGlobal2 = _slicedToArray(_useGlobal, 1),\n      contacts = _useGlobal2[0];\n\n  useEffect(function () {\n    if (!contacts) {\n      setGlobal({\n        contacts: defaultContacts\n      });\n    }\n\n    setLoaded(true);\n  }, []);\n\n  var iOSLightTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: \"#0071e3\",\n      text: \"#000\",\n      text2: \"#999\",\n      border: \"#EAEAEA\",\n      background: \"#f3f3f3\",\n      card: \"#fff\"\n    })\n  });\n\n  var iOSDarkTheme = _objectSpread(_objectSpread({}, DarkTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DarkTheme.colors), {}, {\n      primary: \"#0071e3\",\n      text: \"#FFF\",\n      text2: \"#999\",\n      border: \"#111\",\n      background: \"#222\",\n      card: \"#000\"\n    })\n  });\n\n  if (loaded) {\n    return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n      barStyle: scheme === \"dark\" ? 'light-content' : \"dark-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), React.createElement(AppearanceProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, React.createElement(NavigationContainer, {\n      theme: scheme === \"dark\" ? iOSDarkTheme : iOSLightTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"RecentMessagesListScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"RecentMessagesListScreen\",\n      component: RecentMessagesListScreen,\n      options: {\n        title: 'Messages'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Message\",\n      component: MessageScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })))));\n  } else return null;\n}","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/App.tsx"],"names":["React","useEffect","useState","NavigationContainer","DefaultTheme","DarkTheme","AppearanceProvider","useColorScheme","createStackNavigator","Stack","useGlobal","setGlobal","RecentMessagesListScreen","MessageScreen","defaultContacts","App","scheme","loaded","setLoaded","contacts","iOSLightTheme","colors","primary","text","text2","border","background","card","iOSDarkTheme","title"],"mappings":";;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAAuE,0BAAvE;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,yBAAnD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAAgE,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AAChE,SAASE,SAAT,EAAoBC,SAApB,QAAqC,QAArC;AAMA,OAAOC,wBAAP;AACA,OAAOC,aAAP;AAGA,OAAOC,eAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,MAAM,GAAGT,cAAc,EAA7B;;AACA,kBAA8BL,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAQe,MAAR;AAAA,MAAgBC,SAAhB;;AACA,mBAAqBR,SAAS,CAAM,UAAN,CAA9B;AAAA;AAAA,MAAQS,QAAR;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAG,CAACkB,QAAJ,EAAa;AACXR,MAAAA,SAAS,CAAC;AACRQ,QAAAA,QAAQ,EAAEL;AADF,OAAD,CAAT;AAGD;;AAEDI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAME,aAAa,mCACdhB,YADc;AAEjBiB,IAAAA,MAAM,kCACDjB,YAAY,CAACiB,MADZ;AAEJC,MAAAA,OAAO,EAAE,SAFL;AAGJC,MAAAA,IAAI,EAAE,MAHF;AAIJC,MAAAA,KAAK,EAAE,MAJH;AAKJC,MAAAA,MAAM,EAAE,SALJ;AAMJC,MAAAA,UAAU,EAAE,SANR;AAOJC,MAAAA,IAAI,EAAE;AAPF;AAFW,IAAnB;;AAaA,MAAMC,YAAY,mCACbvB,SADa;AAEhBgB,IAAAA,MAAM,kCACDhB,SAAS,CAACgB,MADT;AAEJC,MAAAA,OAAO,EAAE,SAFL;AAGJC,MAAAA,IAAI,EAAE,MAHF;AAIJC,MAAAA,KAAK,EAAE,MAJH;AAKJC,MAAAA,MAAM,EAAE,MALJ;AAMJC,MAAAA,UAAU,EAAE,MANR;AAOJC,MAAAA,IAAI,EAAE;AAPF;AAFU,IAAlB;;AAaA,MAAGV,MAAH,EAAU;AACR,WACE,0CACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,MAAM,KAAK,MAAX,GAAoB,eAApB,GAAsC,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAEA,MAAM,KAAK,MAAX,GAAoBY,YAApB,GAAmCR,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,0BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,0BAAnB;AAA8C,MAAA,SAAS,EAAER,wBAAzD;AAAmF,MAAA,OAAO,EAAE;AAC1FiB,QAAAA,KAAK,EAAE;AADmF,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAEhB,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CAFF,CADF;AAeD,GAhBD,MAgBO,OAAO,IAAP;AACR","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, StatusBar } from 'react-native';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme } from '@react-navigation/native';\nimport { AppearanceProvider, useColorScheme } from 'react-native-appearance';\nimport { createStackNavigator } from '@react-navigation/stack'; const Stack = createStackNavigator();\nimport { useGlobal, setGlobal } from 'reactn';\n\n// Components\nimport NewMessage from './src/components/buttons/NewMessage';\n\n// Screens\nimport RecentMessagesListScreen from './src/screens/RecentMessagesListScreen';\nimport MessageScreen from './src/screens/MessageScreen';\n\n// Data\nimport defaultContacts from './src/data/contacts.json';\n\nexport default function App() {\n  const scheme = useColorScheme();\n  const [ loaded, setLoaded ] = useState(false);\n  const [ contacts ] = useGlobal<any>('contacts');\n\n  useEffect(() => {\n    if(!contacts){\n      setGlobal({\n        contacts: defaultContacts\n      })\n    }\n\n    setLoaded(true)\n  }, [])\n\n  const iOSLightTheme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme.colors,\n      primary: \"#0071e3\",\n      text: \"#000\",\n      text2: \"#999\",\n      border: \"#EAEAEA\",\n      background: \"#f3f3f3\",\n      card: \"#fff\"\n    }\n  }\n  \n  const iOSDarkTheme = {\n    ...DarkTheme,\n    colors: {\n      ...DarkTheme.colors,\n      primary: \"#0071e3\",\n      text: \"#FFF\",\n      text2: \"#999\",\n      border: \"#111\",\n      background: \"#222\",\n      card: \"#000\"\n    }\n  }\n\n  if(loaded){\n    return (\n      <>\n        <StatusBar barStyle={scheme === \"dark\" ? 'light-content' : \"dark-content\"}/>\n        <AppearanceProvider>\n          <NavigationContainer theme={scheme === \"dark\" ? iOSDarkTheme : iOSLightTheme}>\n            <Stack.Navigator initialRouteName=\"RecentMessagesListScreen\">\n              <Stack.Screen name=\"RecentMessagesListScreen\" component={RecentMessagesListScreen} options={{\n                title: 'Messages'\n              }}/>\n              <Stack.Screen name=\"Message\" component={MessageScreen}/>\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppearanceProvider>\n      </>\n    );\n  } else return null;\n}\n"]},"metadata":{},"sourceType":"module"}