{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/components/list/recentMessages/ReadIcon.tsx\";\n\nimport { useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar ReadIcon = function ReadIcon(_ref) {\n  var hasRead = _ref.hasRead,\n      isEditing = _ref.isEditing;\n  var theme = useTheme();\n\n  if (!hasRead && !isEditing) {\n    return React.createElement(View, {\n      style: styles.wrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: [{\n        backgroundColor: theme.colors.primary\n      }, styles.icon],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return null;\n  }\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: 10,\n    left: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  icon: {\n    height: 10,\n    width: 10,\n    borderRadius: 10\n  }\n});\nexport default ReadIcon;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/list/recentMessages/ReadIcon.tsx"],"names":["useTheme","React","ReadIcon","hasRead","isEditing","theme","styles","wrapper","backgroundColor","colors","primary","icon","StyleSheet","create","position","height","width","left","justifyContent","alignItems","borderRadius"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAC/C,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;;AAEA,MAAG,CAACG,OAAD,IAAY,CAACC,SAAhB,EAA0B;AACtB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,eAAe,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAAhC,OAAD,EAA4CJ,MAAM,CAACK,IAAnD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,MAMO;AAAE,WAAO,IAAP;AAAc;AAC1B,CAVD;;AAYA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,OAAO,EAAE;AACLO,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,KAAK,EAAE,EAHF;AAILC,IAAAA,IAAI,EAAE,CAJD;AAKLC,IAAAA,cAAc,EAAE,QALX;AAMLC,IAAAA,UAAU,EAAE;AANP,GADoB;AAS7BR,EAAAA,IAAI,EAAE;AACFI,IAAAA,MAAM,EAAE,EADN;AAEFC,IAAAA,KAAK,EAAE,EAFL;AAGFI,IAAAA,YAAY,EAAE;AAHZ;AATuB,CAAlB,CAAf;AAqBA,eAAelB,QAAf","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst ReadIcon = ({ hasRead, isEditing }:Props) => {\n    const theme = useTheme();\n\n    if(!hasRead && !isEditing){\n        return (\n            <View style={styles.wrapper}>\n                <View style={[{ backgroundColor: theme.colors.primary }, styles.icon ]}></View>\n            </View>\n        )\n    } else { return null; }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"absolute\",\n        height: \"100%\",\n        width: 10,\n        left: 6,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    icon: {\n        height: 10,\n        width: 10,\n        borderRadius: 10\n    }\n});\n\ninterface Props {\n    hasRead: boolean,\n    isEditing: boolean\n}\n\nexport default ReadIcon;"]},"metadata":{},"sourceType":"module"}