{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nginx-iwnl/messages/src/components/list/messages/ReceivingMessage.tsx\";\n\nimport { useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport timestampToDate from \"../../../functions/timestampToDate\";\n\nvar SendingMessage = function SendingMessage(_ref) {\n  var message = _ref.message,\n      time = _ref.time;\n  var theme = useTheme();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.bubble, {\n      backgroundColor: theme.colors.border\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.colors.text,\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, message)), React.createElement(Text, {\n    style: [styles.timeSent, {\n      color: theme.colors.text2\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, timestampToDate(time)));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    flex: 1,\n    alignItems: \"flex-start\",\n    paddingRight: 16\n  },\n  bubble: {\n    padding: 8,\n    maxWidth: \"75%\",\n    borderTopRightRadius: 16,\n    borderTopLeftRadius: 16,\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 16\n  },\n  timeSent: {\n    fontSize: 12,\n    marginTop: 4\n  }\n});\nexport default SendingMessage;","map":{"version":3,"sources":["/Users/nginx-iwnl/messages/src/components/list/messages/ReceivingMessage.tsx"],"names":["useTheme","React","timestampToDate","SendingMessage","message","time","theme","styles","container","bubble","backgroundColor","colors","border","color","text","fontSize","timeSent","text2","StyleSheet","create","padding","flex","alignItems","paddingRight","maxWidth","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","marginTop"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,eAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AACjD,MAAMC,KAAK,GAAGN,QAAQ,EAAtB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACD,MAAM,CAACE,MAAR,EAAgB;AAAEC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAAhC,KAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEP,KAAK,CAACK,MAAN,CAAaG,IAAtB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DX,OAA1D,CADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACG,MAAM,CAACS,QAAR,EAAkB;AAAEH,MAAAA,KAAK,EAAEP,KAAK,CAACK,MAAN,CAAaM;AAAtB,KAAlB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEf,eAAe,CAACG,IAAD,CAA/E,CAJJ,CADJ;AAQH,CAXD;;AAaA,IAAME,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACPY,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,IAAI,EAAE,CAFC;AAGPC,IAAAA,UAAU,EAAE,YAHL;AAIPC,IAAAA,YAAY,EAAE;AAJP,GADkB;AAO7Bd,EAAAA,MAAM,EAAE;AACJW,IAAAA,OAAO,EAAE,CADL;AAEJI,IAAAA,QAAQ,EAAE,KAFN;AAGJC,IAAAA,oBAAoB,EAAE,EAHlB;AAIJC,IAAAA,mBAAmB,EAAE,EAJjB;AAKJC,IAAAA,sBAAsB,EAAE,CALpB;AAMJC,IAAAA,uBAAuB,EAAE;AANrB,GAPqB;AAe7BZ,EAAAA,QAAQ,EAAE;AACND,IAAAA,QAAQ,EAAE,EADJ;AAENc,IAAAA,SAAS,EAAE;AAFL;AAfmB,CAAlB,CAAf;AA0BA,eAAe1B,cAAf","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport timestampToDate from '../../../functions/timestampToDate';\n\nconst SendingMessage = ({ message, time }: Props) => {\n    const theme = useTheme();\n\n    return (\n        <View style={styles.container}>\n            <View style={[styles.bubble, { backgroundColor: theme.colors.border }]}>\n                <Text style={{ color: theme.colors.text, fontSize: 16 }}>{message}</Text>\n            </View>\n            <Text style={[styles.timeSent, { color: theme.colors.text2 }]}>{timestampToDate(time)}</Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 8,\n        flex: 1,\n        alignItems: \"flex-start\",\n        paddingRight: 16\n    },\n    bubble: {\n        padding: 8,\n        maxWidth: \"75%\",\n        borderTopRightRadius: 16,\n        borderTopLeftRadius: 16,\n        borderBottomLeftRadius: 4,\n        borderBottomRightRadius: 16,\n    },\n    timeSent: {\n        fontSize: 12,\n        marginTop: 4\n    }\n});\n\ninterface Props {\n    message: string,\n    time: number\n}\n\nexport default SendingMessage;"]},"metadata":{},"sourceType":"module"}